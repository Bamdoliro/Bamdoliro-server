spring:
  profiles:
    active: local
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
---
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:mysql://127.0.0.1:3307/bamdoliro_gati
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: bamdoliro
    password: bamdoliro

  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true


  jwt:
    secret: asdfasdfasdfasfasdfadsfadsfasdfsadfsdfasfsfasdfsafasdfasdfasfasfasdsafsdffadsfasdfasfasf

  cache:
    type: redis

  redis:
    host: localhost
    port: 6379


socket:
  config:
    port: 9090

debug: true


logging:
  level:
    org.springframework.orm.jpa: DEBUG
    org.springframework.transaction: DEBUG

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    region:
      static: ${S3_REGION}
    stack:
      auto: false
    credentials:
      instanceProfile: true
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
---
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:mysql://gati-database:${DB_PORT}/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update

  jwt:
    secret: ${JWT_SECRET}

  cache:
    type: redis

  redis:
    host: gati-redis
    port: ${REDIS_PORT}

socket:
  config:
    port: ${SOCKET_PORT}

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    region:
      static: ${S3_REGION}
    stack:
      auto: false
    credentials:
      instanceProfile: true
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}